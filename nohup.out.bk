 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Running on http://68.183.111.180:5000/ (Press CTRL+C to quit)
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:49:17] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:49:18] "GET /favicon.ico HTTP/1.1" 404 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
Traceback (most recent call last):
  File "main.py", line 42, in <module>
    app.run(host="68.183.111.180", port=5000)
  File "/root/miniconda3/lib/python3.7/site-packages/flask/app.py", line 943, in run
    run_simple(host, port, self, **options)
  File "/root/miniconda3/lib/python3.7/site-packages/werkzeug/serving.py", line 795, in run_simple
    s.bind(get_sockaddr(hostname, port, address_family))
OSError: [Errno 98] Address already in use
137.103.41.221 - - [29/Jan/2019 00:50:52] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:12] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:16] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:52:35] "GET /api/logs HTTP/1.1" 200 -
require login for endpoint --> admin.index
<SecureCookieSession {'email': 'mr.e.cameron@gmail.com'}>
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,212 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine SELECT admin_test.id AS admin_test_id, admin_test.email AS admin_test_email, admin_test.name AS admin_test_name, admin_test.password AS admin_test_password, admin_test.recovery AS admin_test_recovery, admin_test.`unique` AS admin_test_unique, admin_test.`role` AS admin_test_role 
FROM admin_test 
WHERE admin_test.email = %(email_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine {'email_1': 'mr.e.cameron@gmail.com', 'param_1': 1}
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine SELECT token.id AS token_id, token.token AS token_token, token.owner_id AS token_owner_id 
FROM token 
WHERE token.owner_id = %(owner_id_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine {'owner_id_1': 1, 'param_1': 1}
Token --> 642779149a4b4388a4e5829db31d130c
2019-01-29 00:52:41,238 INFO sqlalchemy.engine.base.Engine ROLLBACK
137.103.41.221 - - [29/Jan/2019 00:52:41] "GET /admin HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:54:28] "GET /api/logs HTTP/1.1" 200 -
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Running on http://68.183.111.180:5000/ (Press CTRL+C to quit)
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:49:17] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:49:18] "GET /favicon.ico HTTP/1.1" 404 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
Traceback (most recent call last):
  File "main.py", line 42, in <module>
    app.run(host="68.183.111.180", port=5000)
  File "/root/miniconda3/lib/python3.7/site-packages/flask/app.py", line 943, in run
    run_simple(host, port, self, **options)
  File "/root/miniconda3/lib/python3.7/site-packages/werkzeug/serving.py", line 795, in run_simple
    s.bind(get_sockaddr(hostname, port, address_family))
OSError: [Errno 98] Address already in use
137.103.41.221 - - [29/Jan/2019 00:50:52] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:12] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:16] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:52:35] "GET /api/logs HTTP/1.1" 200 -
require login for endpoint --> admin.index
<SecureCookieSession {'email': 'mr.e.cameron@gmail.com'}>
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,212 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine SELECT admin_test.id AS admin_test_id, admin_test.email AS admin_test_email, admin_test.name AS admin_test_name, admin_test.password AS admin_test_password, admin_test.recovery AS admin_test_recovery, admin_test.`unique` AS admin_test_unique, admin_test.`role` AS admin_test_role 
FROM admin_test 
WHERE admin_test.email = %(email_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine {'email_1': 'mr.e.cameron@gmail.com', 'param_1': 1}
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine SELECT token.id AS token_id, token.token AS token_token, token.owner_id AS token_owner_id 
FROM token 
WHERE token.owner_id = %(owner_id_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine {'owner_id_1': 1, 'param_1': 1}
Token --> 642779149a4b4388a4e5829db31d130c
2019-01-29 00:52:41,238 INFO sqlalchemy.engine.base.Engine ROLLBACK
137.103.41.221 - - [29/Jan/2019 00:52:41] "GET /admin HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082

 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Running on http://68.183.111.180:5000/ (Press CTRL+C to quit)
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:49:17] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:49:18] "GET /favicon.ico HTTP/1.1" 404 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
Traceback (most recent call last):
  File "main.py", line 42, in <module>
    app.run(host="68.183.111.180", port=5000)
  File "/root/miniconda3/lib/python3.7/site-packages/flask/app.py", line 943, in run
    run_simple(host, port, self, **options)
  File "/root/miniconda3/lib/python3.7/site-packages/werkzeug/serving.py", line 795, in run_simple137.103.41.221 - - [29/Jan/2019 00:54:38] "GET /api/logs HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading

    s.bind(get_sockaddr(hostname, port, address_family))
OSError: [Errno 98] Address already in use
137.103.41.221 - - [29/Jan/2019 00:50:52] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:12] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:16] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:52:35] "GET /api/logs HTTP/1.1" 200 -
require login for endpoint --> admin.index
<SecureCookieSession {'email': 'mr.e.cameron@gmail.com'}>
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,212 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine SELECT admin_test.id AS admin_test_id, admin_test.email AS admin_test_email, admin_test.name AS admin_test_name, admin_test.password AS admin_test_password, admin_test.recovery AS admin_test_recovery, admin_test.`unique` AS admin_test_unique, admin_test.`role` AS admin_test_role 
FROM admin_test 
WHERE admin_test.email = %(email_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine {'email_1': 'mr.e.cameron@gmail.com', 'param_1': 1}
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine SELECT token.id AS token_id, token.token AS token_token, token.owner_id AS token_owner_id 
FROM token 
WHERE token.owner_id = %(owner_id_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine {'owner_id_1': 1, 'param_1': 1}
Token --> 642779149a4b4388a4e5829db31d130c
2019-01-29 00:52:41,238 INFO sqlalchemy.engine.base.Engine ROLLBACK
137.103.41.221 - - [29/Jan/2019 00:52:41] "GET /admin HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:54:28] "GET /api/logs HTTP/1.1" 200 -

 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Running on http://68.183.111.180:5000/ (Press CTRL+C to quit)
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:49:17] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:49:18] "GET /favicon.ico HTTP/1.1" 404 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
Traceback (most recent call last):
  File "main.py", line 42, in <module>
    app.run(host="68.183.111.180", port=5000)
  File "/root/miniconda3/lib/python3.7/site-packages/flask/app.py", line 943, in run
    run_simple(host, port, self, **options)
  File "/root/miniconda3/lib/python3.7/site-packages/werkzeug/serving.py", line 795, in run_simple
    s.bind(get_sockaddr(hostname, port, address_family))
OSError: [Errno 98] Address already in use
137.103.41.221 - - [29/Jan/2019 00:50:52] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:12] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:16] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:52:35] "GET /api/logs HTTP/1.1" 200 -
require login for endpoint --> admin.index
<SecureCookieSession {'email': 'mr.e.cameron@gmail.com'}>
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,212 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine SELECT admin_test.id AS admin_test_id, admin_test.email AS admin_test_email, admin_test.name AS admin_test_name, admin_test.password AS admin_test_password, admin_test.recovery AS admin_test_recovery, admin_test.`unique` AS admin_test_unique, admin_test.`role` AS admin_test_role 
FROM admin_test 
WHERE admin_test.email = %(email_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine {'email_1': 'mr.e.cameron@gmail.com', 'param_1': 1}
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine SELECT token.id AS token_id, token.token AS token_token, token.owner_id AS token_owner_id 
FROM token 
WHERE token.owner_id = %(owner_id_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine {'owner_id_1': 1, 'param_1': 1}
Token --> 642779149a4b4388a4e5829db31d130c
2019-01-29 00:52:41,238 INFO sqlalchemy.engine.base.Engine ROLLBACK
137.103.41.221 - - [29/Jan/2019 00:52:41] "GET /admin HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:54:28] "GET /api/logs HTTP/1.1" 200 -
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Running on http://68.183.111.180:5000/ (Press CTRL+C to quit)
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:49:17] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:49:18] "GET /favicon.ico HTTP/1.1" 404 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
Traceback (most recent call last):
  File "main.py", line 42, in <module>
    app.run(host="68.183.111.180", port=5000)
  File "/root/miniconda3/lib/python3.7/site-packages/flask/app.py", line 943, in run
    run_simple(host, port, self, **options)
  File "/root/miniconda3/lib/python3.7/site-packages/werkzeug/serving.py", line 795, in run_simple
    s.bind(get_sockaddr(hostname, port, address_family))
OSError: [Errno 98] Address already in use
137.103.41.221 - - [29/Jan/2019 00:50:52] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:12] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:16] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:52:35] "GET /api/logs HTTP/1.1" 200 -
require login for endpoint --> admin.index
<SecureCookieSession {'email': 'mr.e.cameron@gmail.com'}>
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,212 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine SELECT admin_test.id AS admin_test_id, admin_test.email AS admin_test_email, admin_test.name AS admin_test_name, admin_test.password AS admin_test_password, admin_test.recovery AS admin_test_recovery, admin_test.`unique` AS admin_test_unique, admin_test.`role` AS admin_test_role 
FROM admin_test 
WHERE admin_test.email = %(email_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine {'email_1': 'mr.e.cameron@gmail.com', 'param_1': 1}
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine SELECT token.id AS token_id, token.token AS token_token, token.owner_id AS token_owner_id 
FROM token 
WHERE token.owner_id = %(owner_id_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine {'owner_id_1': 1, 'param_1': 1}
Token --> 642779149a4b4388a4e5829db31d130c
2019-01-29 00:52:41,238 INFO sqlalchemy.engine.base.Engine ROLLBACK
137.103.41.221 - - [29/Jan/2019 00:52:41] "GET /admin HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082

 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Running on http://68.183.111.180:5000/ (Press CTRL+C to quit)
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:49:17] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:49:18] "GET /favicon.ico HTTP/1.1" 404 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
Traceback (most recent call last):
  File "main.py", line 42, in <module>
    app.run(host="68.183.111.180", port=5000)
  File "/root/miniconda3/lib/python3.7/site-packages/flask/app.py", line 943, in run
    run_simple(host, port, self, **options)
  File "/root/miniconda3/lib/python3.7/site-packages/werkzeug/serving.py", line 795, in run_simple137.103.41.221 - - [29/Jan/2019 00:54:38] "GET /api/logs HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading

    s.bind(get_sockaddr(hostname, port, address_family))
OSError: [Errno 98] Address already in use
137.103.41.221 - - [29/Jan/2019 00:50:52] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:12] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:16] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:52:35] "GET /api/logs HTTP/1.1" 200 -
require login for endpoint --> admin.index
<SecureCookieSession {'email': 'mr.e.cameron@gmail.com'}>
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,212 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine SELECT admin_test.id AS admin_test_id, admin_test.email AS admin_test_email, admin_test.name AS admin_test_name, admin_test.password AS admin_test_password, admin_test.recovery AS admin_test_recovery, admin_test.`unique` AS admin_test_unique, admin_test.`role` AS admin_test_role 137.103.41.221 - - [29/Jan/2019 00:55:13] "GET /api/logs HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading

FROM admin_test 
WHERE admin_test.email = %(email_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine {'email_1': 'mr.e.cameron@gmail.com', 'param_1': 1}
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine SELECT token.id AS token_id, token.token AS token_token, token.owner_id AS token_owner_id 
FROM token 
WHERE token.owner_id = %(owner_id_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine {'owner_id_1': 1, 'param_1': 1}
Token --> 642779149a4b4388a4e5829db31d130c
2019-01-29 00:52:41,238 INFO sqlalchemy.engine.base.Engine ROLLBACK
137.103.41.221 - - [29/Jan/2019 00:52:41] "GET /admin HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:54:28] "GET /api/logs HTTP/1.1" 200 -

 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082

 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Running on http://68.183.111.180:5000/ (Press CTRL+C to quit)
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:49:17] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:49:18] "GET /favicon.ico HTTP/1.1" 404 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
Traceback (most recent call last):
  File "main.py", line 42, in <module>
    app.run(host="68.183.111.180", port=5000)
  File "/root/miniconda3/lib/python3.7/site-packages/flask/app.py", line 943, in run
    run_simple(host, port, self, **options)
  File "/root/miniconda3/lib/python3.7/site-packages/werkzeug/serving.py", line 795, in run_simple
    s.bind(get_sockaddr(hostname, port, address_family))
OSError: [Errno 98] Address already in use
137.103.41.221 - - [29/Jan/2019 00:50:52] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:12] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:16] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:52:35] "GET /api/logs HTTP/1.1" 200 -
require login for endpoint --> admin.index
<SecureCookieSession {'email': 'mr.e.cameron@gmail.com'}>
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,212 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine SELECT admin_test.id AS admin_test_id, admin_test.email AS admin_test_email, admin_test.name AS admin_test_name, admin_test.password AS admin_test_password, admin_test.recovery AS admin_test_recovery, admin_test.`unique` AS admin_test_unique, admin_test.`role` AS admin_test_role 
FROM admin_test 
WHERE admin_test.email = %(email_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine {'email_1': 'mr.e.cameron@gmail.com', 'param_1': 1}
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine SELECT token.id AS token_id, token.token AS token_token, token.owner_id AS token_owner_id 
FROM token 
WHERE token.owner_id = %(owner_id_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine {'owner_id_1': 1, 'param_1': 1}
Token --> 642779149a4b4388a4e5829db31d130c
2019-01-29 00:52:41,238 INFO sqlalchemy.engine.base.Engine ROLLBACK
137.103.41.221 - - [29/Jan/2019 00:52:41] "GET /admin HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:54:28] "GET /api/logs HTTP/1.1" 200 -
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Running on http://68.183.111.180:5000/ (Press CTRL+C to quit)
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:49:17] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:49:18] "GET /favicon.ico HTTP/1.1" 404 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
Traceback (most recent call last):
  File "main.py", line 42, in <module>
    app.run(host="68.183.111.180", port=5000)
  File "/root/miniconda3/lib/python3.7/site-packages/flask/app.py", line 943, in run
    run_simple(host, port, self, **options)
  File "/root/miniconda3/lib/python3.7/site-packages/werkzeug/serving.py", line 795, in run_simple
    s.bind(get_sockaddr(hostname, port, address_family))
OSError: [Errno 98] Address already in use
137.103.41.221 - - [29/Jan/2019 00:50:52] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:12] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:16] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:52:35] "GET /api/logs HTTP/1.1" 200 -
require login for endpoint --> admin.index
<SecureCookieSession {'email': 'mr.e.cameron@gmail.com'}>
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,212 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine SELECT admin_test.id AS admin_test_id, admin_test.email AS admin_test_email, admin_test.name AS admin_test_name, admin_test.password AS admin_test_password, admin_test.recovery AS admin_test_recovery, admin_test.`unique` AS admin_test_unique, admin_test.`role` AS admin_test_role 
FROM admin_test 
WHERE admin_test.email = %(email_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine {'email_1': 'mr.e.cameron@gmail.com', 'param_1': 1}
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine SELECT token.id AS token_id, token.token AS token_token, token.owner_id AS token_owner_id 
FROM token 
WHERE token.owner_id = %(owner_id_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine {'owner_id_1': 1, 'param_1': 1}
Token --> 642779149a4b4388a4e5829db31d130c
2019-01-29 00:52:41,238 INFO sqlalchemy.engine.base.Engine ROLLBACK
137.103.41.221 - - [29/Jan/2019 00:52:41] "GET /admin HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082

 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Running on http://68.183.111.180:5000/ (Press CTRL+C to quit)
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:49:17] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:49:18] "GET /favicon.ico HTTP/1.1" 404 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
Traceback (most recent call last):
  File "main.py", line 42, in <module>
    app.run(host="68.183.111.180", port=5000)
  File "/root/miniconda3/lib/python3.7/site-packages/flask/app.py", line 943, in run
    run_simple(host, port, self, **options)
  File "/root/miniconda3/lib/python3.7/site-packages/werkzeug/serving.py", line 795, in run_simple137.103.41.221 - - [29/Jan/2019 00:54:38] "GET /api/logs HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading

OSError: [Errno 98] Address already in use
137.103.41.221 - - [29/Jan/2019 00:50:52] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:12] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:16] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:52:35] "GET /api/logs HTTP/1.1" 200 -
require login for endpoint --> admin.index
<SecureCookieSession {'email': 'mr.e.cameron@gmail.com'}>
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,212 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine SELECT admin_test.id AS admin_test_id, admin_test.email AS admin_test_email, admin_test.name AS admin_test_name, admin_test.password AS admin_test_password, admin_test.recovery AS admin_test_recovery, admin_test.`unique` AS admin_test_unique, admin_test.`role` AS admin_test_role 
FROM admin_test 
WHERE admin_test.email = %(email_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine {'email_1': 'mr.e.cameron@gmail.com', 'param_1': 1}
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine SELECT token.id AS token_id, token.token AS token_token, token.owner_id AS token_owner_id 
FROM token 
WHERE token.owner_id = %(owner_id_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine {'owner_id_1': 1, 'param_1': 1}
Token --> 642779149a4b4388a4e5829db31d130c
2019-01-29 00:52:41,238 INFO sqlalchemy.engine.base.Engine ROLLBACK
137.103.41.221 - - [29/Jan/2019 00:52:41] "GET /admin HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:54:28] "GET /api/logs HTTP/1.1" 200 -

/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Running on http://68.183.111.180:5000/ (Press CTRL+C to quit)
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:49:17] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:49:18] "GET /favicon.ico HTTP/1.1" 404 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
Traceback (most recent call last):
  File "main.py", line 42, in <module>
    app.run(host="68.183.111.180", port=5000)
  File "/root/miniconda3/lib/python3.7/site-packages/flask/app.py", line 943, in run
    run_simple(host, port, self, **options)
  File "/root/miniconda3/lib/python3.7/site-packages/werkzeug/serving.py", line 795, in run_simple
    s.bind(get_sockaddr(hostname, port, address_family))
OSError: [Errno 98] Address already in use
137.103.41.221 - - [29/Jan/2019 00:50:52] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:12] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:16] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:52:35] "GET /api/logs HTTP/1.1" 200 -
require login for endpoint --> admin.index
<SecureCookieSession {'email': 'mr.e.cameron@gmail.com'}>
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,212 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine SELECT admin_test.id AS admin_test_id, admin_test.email AS admin_test_email, admin_test.name AS admin_test_name, admin_test.password AS admin_test_password, admin_test.recovery AS admin_test_recovery, admin_test.`unique` AS admin_test_unique, admin_test.`role` AS admin_test_role 
FROM admin_test 
WHERE admin_test.email = %(email_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine {'email_1': 'mr.e.cameron@gmail.com', 'param_1': 1}
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine SELECT token.id AS token_id, token.token AS token_token, token.owner_id AS token_owner_id 
FROM token 
WHERE token.owner_id = %(owner_id_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine {'owner_id_1': 1, 'param_1': 1}
Token --> 642779149a4b4388a4e5829db31d130c
2019-01-29 00:52:41,238 INFO sqlalchemy.engine.base.Engine ROLLBACK
137.103.41.221 - - [29/Jan/2019 00:52:41] "GET /admin HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:54:28] "GET /api/logs HTTP/1.1" 200 -
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Running on http://68.183.111.180:5000/ (Press CTRL+C to quit)
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:49:17] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:49:18] "GET /favicon.ico HTTP/1.1" 404 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
Traceback (most recent call last):
  File "main.py", line 42, in <module>
    app.run(host="68.183.111.180", port=5000)
  File "/root/miniconda3/lib/python3.7/site-packages/flask/app.py", line 943, in run
    run_simple(host, port, self, **options)
  File "/root/miniconda3/lib/python3.7/site-packages/werkzeug/serving.py", line 795, in run_simple
    s.bind(get_sockaddr(hostname, port, address_family))
OSError: [Errno 98] Address already in use
137.103.41.221 - - [29/Jan/2019 00:50:52] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:12] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:16] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:52:35] "GET /api/logs HTTP/1.1" 200 -
require login for endpoint --> admin.index
<SecureCookieSession {'email': 'mr.e.cameron@gmail.com'}>
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,212 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine SELECT admin_test.id AS admin_test_id, admin_test.email AS admin_test_email, admin_test.name AS admin_test_name, admin_test.password AS admin_test_password, admin_test.recovery AS admin_test_recovery, admin_test.`unique` AS admin_test_unique, admin_test.`role` AS admin_test_role 
FROM admin_test 
WHERE admin_test.email = %(email_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine {'email_1': 'mr.e.cameron@gmail.com', 'param_1': 1}
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine SELECT token.id AS token_id, token.token AS token_token, token.owner_id AS token_owner_id 
FROM token 
WHERE token.owner_id = %(owner_id_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine {'owner_id_1': 1, 'param_1': 1}
Token --> 642779149a4b4388a4e5829db31d130c
2019-01-29 00:52:41,238 INFO sqlalchemy.engine.base.Engine ROLLBACK
137.103.41.221 - - [29/Jan/2019 00:52:41] "GET /admin HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082

 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Running on http://68.183.111.180:5000/ (Press CTRL+C to quit)
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:49:17] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:49:18] "GET /favicon.ico HTTP/1.1" 404 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
 * Serving Flask app "config.config" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
Traceback (most recent call last):
  File "main.py", line 42, in <module>
    app.run(host="68.183.111.180", port=5000)
  File "/root/miniconda3/lib/python3.7/site-packages/flask/app.py", line 943, in run
    run_simple(host, port, self, **options)
  File "/root/miniconda3/lib/python3.7/site-packages/werkzeug/serving.py", line 795, in run_simple137.103.41.221 - - [29/Jan/2019 00:54:38] "GET /api/logs HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading

OSError: [Errno 98] Address already in use
137.103.41.221 - - [29/Jan/2019 00:50:52] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:12] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:51:16] "GET /api/logs HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 00:52:35] "GET /api/logs HTTP/1.1" 200 -
require login for endpoint --> admin.index
<SecureCookieSession {'email': 'mr.e.cameron@gmail.com'}>
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
2019-01-29 00:52:41,188 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
2019-01-29 00:52:41,198 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()137.103.41.221 - - [29/Jan/2019 00:56:48] "GET /api/logs HTTP/1.1" 200 -
191.96.110.9 - - [29/Jan/2019 03:22:24] "GET / HTTP/1.0" 200 -

2019-01-29 00:52:41,204 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2019-01-29 00:52:41,207 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,210 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2019-01-29 00:52:41,211 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 00:52:41,212 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine SELECT admin_test.id AS admin_test_id, admin_test.email AS admin_test_email, admin_test.name AS admin_test_name, admin_test.password AS admin_test_password, admin_test.recovery AS admin_test_recovery, admin_test.`unique` AS admin_test_unique, admin_test.`role` AS admin_test_role 137.103.41.221 - - [29/Jan/2019 00:55:13] "GET /api/logs HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading

WHERE admin_test.email = %(email_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,213 INFO sqlalchemy.engine.base.Engine {'email_1': 'mr.e.cameron@gmail.com', 'param_1': 1}
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine SELECT token.id AS token_id, token.token AS token_token, token.owner_id AS token_owner_id 
FROM token 
WHERE token.owner_id = %(owner_id_1)s 
 LIMIT %(param_1)s
2019-01-29 00:52:41,216 INFO sqlalchemy.engine.base.Engine {'owner_id_1': 1, 'param_1': 1}
Token --> 642779149a4b4388a4e5829db31d130c
2019-01-29 00:52:41,238 INFO sqlalchemy.engine.base.Engine ROLLBACK
137.103.41.221 - - [29/Jan/2019 00:52:41] "GET /admin HTTP/1.1" 200 -
 * Detected change in '/var/www/mdchem/mdchem/API/logs.py', reloading
 * Restarting with stat
/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082
137.103.41.221 - - [29/Jan/2019 00:54:28] "GET /api/logs HTTP/1.1" 200 -

/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082

/root/miniconda3/lib/python3.7/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
 * Debugger is active!
 * Debugger PIN: 437-771-082

2019-01-29 03:25:14,967 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
2019-01-29 03:25:14,967 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 03:25:14,971 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
2019-01-29 03:25:14,971 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 03:25:14,975 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
2019-01-29 03:25:14,975 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 03:25:14,976 INFO sqlalchemy.engine.base.Engine show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2019-01-29 03:25:14,976 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 03:25:14,978 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2019-01-29 03:25:14,978 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 03:25:14,979 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2019-01-29 03:25:14,979 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 03:25:14,980 INFO sqlalchemy.engine.base.Engine SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2019-01-29 03:25:14,980 INFO sqlalchemy.engine.base.Engine {}
2019-01-29 03:25:14,981 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 03:25:14,982 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:25:14,982 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:25:14,984 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:25:14,984 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:25:14,986 INFO sqlalchemy.engine.base.Engine ROLLBACK
104.4.177.81 - - [29/Jan/2019 03:25:14] "POST /api/save HTTP/1.1" 401 -
2019-01-29 03:27:43,095 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 03:27:43,095 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:27:43,096 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:27:43,098 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:27:43,098 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:27:43,099 INFO sqlalchemy.engine.base.Engine ROLLBACK
104.4.177.81 - - [29/Jan/2019 03:27:43] "POST /api/save HTTP/1.1" 401 -
2019-01-29 03:31:02,929 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 03:31:02,930 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:31:02,930 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:31:02,932 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:31:02,932 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:31:02,934 INFO sqlalchemy.engine.base.Engine ROLLBACK
104.4.177.81 - - [29/Jan/2019 03:31:02] "POST /api/save HTTP/1.1" 401 -
2019-01-29 03:36:13,479 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 03:36:13,479 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:36:13,479 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:36:13,481 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:36:13,481 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:36:13,482 INFO sqlalchemy.engine.base.Engine ROLLBACK
104.4.177.81 - - [29/Jan/2019 03:36:13] "POST /api/save HTTP/1.1" 401 -
2019-01-29 03:38:17,125 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 03:38:17,125 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:38:17,126 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:38:17,127 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:38:17,127 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:38:17,128 INFO sqlalchemy.engine.base.Engine ROLLBACK
104.4.177.81 - - [29/Jan/2019 03:38:17] "POST /api/save HTTP/1.1" 401 -
2019-01-29 03:45:14,275 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 03:45:14,275 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:45:14,276 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:45:14,277 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:45:14,277 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:45:14,280 INFO sqlalchemy.engine.base.Engine ROLLBACK
104.4.177.81 - - [29/Jan/2019 03:45:14] "POST /api/save HTTP/1.1" 401 -
2019-01-29 03:47:01,107 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 03:47:01,108 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:47:01,108 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:47:01,110 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:47:01,110 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:47:01,112 INFO sqlalchemy.engine.base.Engine ROLLBACK
104.4.177.81 - - [29/Jan/2019 03:47:01] "POST /api/save HTTP/1.1" 401 -
2019-01-29 03:50:35,938 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 03:50:35,939 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:50:35,939 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:50:35,941 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:50:35,941 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:50:35,942 INFO sqlalchemy.engine.base.Engine ROLLBACK
104.4.177.81 - - [29/Jan/2019 03:50:35] "POST /api/save HTTP/1.1" 401 -
2019-01-29 03:52:05,939 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 03:52:05,940 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:52:05,940 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:52:05,943 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:52:05,943 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:52:05,944 INFO sqlalchemy.engine.base.Engine ROLLBACK
104.4.177.81 - - [29/Jan/2019 03:52:05] "POST /api/save HTTP/1.1" 401 -
2019-01-29 03:53:36,644 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 03:53:36,645 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:53:36,645 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:53:36,647 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:53:36,647 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:53:36,649 INFO sqlalchemy.engine.base.Engine ROLLBACK
104.4.177.81 - - [29/Jan/2019 03:53:36] "POST /api/save HTTP/1.1" 401 -
2019-01-29 03:58:20,740 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 03:58:20,741 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:58:20,741 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:58:20,743 INFO sqlalchemy.engine.base.Engine SELECT student.id AS student_id, student.uid AS student_uid, student.email AS student_email, student.score AS student_score 
FROM student 
WHERE student.uid = %(uid_1)s
2019-01-29 03:58:20,743 INFO sqlalchemy.engine.base.Engine {'uid_1': 'cj2wk7cAYbNQ4hjrcje0q8992zW2'}
2019-01-29 03:58:20,744 INFO sqlalchemy.engine.base.Engine ROLLBACK
104.4.177.81 - - [29/Jan/2019 03:58:20] "POST /api/save HTTP/1.1" 401 -
require login for endpoint --> admin.index
<SecureCookieSession {'email': 'mr.e.cameron@gmail.com'}>
2019-01-29 04:20:56,944 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-01-29 04:20:56,946 INFO sqlalchemy.engine.base.Engine SELECT admin_test.id AS admin_test_id, admin_test.email AS admin_test_email, admin_test.name AS admin_test_name, admin_test.password AS admin_test_password, admin_test.recovery AS admin_test_recovery, admin_test.`unique` AS admin_test_unique, admin_test.`role` AS admin_test_role 
FROM admin_test 
WHERE admin_test.email = %(email_1)s 
 LIMIT %(param_1)s
2019-01-29 04:20:56,946 INFO sqlalchemy.engine.base.Engine {'email_1': 'mr.e.cameron@gmail.com', 'param_1': 1}
2019-01-29 04:20:56,949 INFO sqlalchemy.engine.base.Engine SELECT token.id AS token_id, token.token AS token_token, token.owner_id AS token_owner_id 
FROM token 
WHERE token.owner_id = %(owner_id_1)s 
 LIMIT %(param_1)s
2019-01-29 04:20:56,950 INFO sqlalchemy.engine.base.Engine {'owner_id_1': 1, 'param_1': 1}
Token --> 642779149a4b4388a4e5829db31d130c
2019-01-29 04:20:56,966 INFO sqlalchemy.engine.base.Engine ROLLBACK
137.103.41.221 - - [29/Jan/2019 04:20:56] "GET /admin HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 04:20:57] "GET /static/frameworks/bootstrap-4.1.3-dist/css/bootstrap.css HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 04:21:03] "GET /static/frameworks/DataTables/DataTables-1.10.18/images/sort_both.png HTTP/1.1" 200 -
137.103.41.221 - - [29/Jan/2019 04:21:03] "GET /static/frameworks/DataTables/DataTables-1.10.18/images/sort_asc.png HTTP/1.1" 200 -
